{"version":3,"sources":["components/Profile/Stats/Stats.module.css","components/FriendList/FriendList.module.css","components/Profile/Description/Description.module.css","components/Statistics/StatisticFormat/StatisticFormat.module.css","components/Statistics/StatisticsSection/StatisticsSection.module.css","components/Profile/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile/Profile.js","components/Profile/Description/Description.js","components/Profile/Stats/Stats.js","components/App/App.js","components/Statistics/StatisticFormat/createRandomColor.js","components/Statistics/StatisticFormat/StatisticFormat.js","components/Statistics/StatisticsSection/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","index.js"],"names":["module","exports","Profile","children","className","style","profile","Description","name","tag","location","avatar","description","src","alt","defaultProps","Stats","followers","views","likes","stats","label","quantity","user","App","createRandomColor","color","i","Math","floor","random","StatisticFormat","statList","map","id","percentage","key","item","backgroundColor","Statistics","title","statistics","FriendList","friends","s","friendList","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","transactionHistory","type","amount","currency","ReactDOM","render","statisticalData","transactions","document","querySelector"],"mappings":"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","file":"static/js/main.71f6c7e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__3hwcv\",\"label\":\"Stats_label__1s7WB\",\"quantity\":\"Stats_quantity__anO_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1gF4p\",\"item\":\"FriendList_item__1V9pb\",\"status\":\"FriendList_status__3jCuU\",\"statusOnline\":\"FriendList_statusOnline__TZN2l FriendList_status__3jCuU\",\"statusOffline\":\"FriendList_statusOffline__1BUOt FriendList_status__3jCuU\",\"avatar\":\"FriendList_avatar__2qQeh\",\"name\":\"FriendList_name__2DV9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__3zKGM\",\"avatar\":\"Description_avatar__2ZQPc\",\"name\":\"Description_name__3GBcs\",\"tag\":\"Description_tag__cIQ6G\",\"location\":\"Description_location__1jqvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"StatisticFormat_statList__17wkF\",\"item\":\"StatisticFormat_item__1ZJmj\",\"label\":\"StatisticFormat_label__2yUNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"StatisticsSection_statistics__2orw2\",\"title\":\"StatisticsSection_title__uEXwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1clh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2yQSW\"};","import React from 'react';\nimport style from './Profile.module.css';\n\nexport default function Profile({ children }) {\n  return <div className={style.profile}>{children}</div>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Description.module.css';\n\nexport default function Description({ name, tag, location, avatar }) {\n  return (\n    <div className={style.description}>\n      <img src={avatar} alt=\"user avatar\" className={style.avatar} />\n      <p className={style.name}>{name}</p>\n      <p className={style.tag}>@{tag}</p>\n      <p className={style.location}>{location}</p>\n    </div>\n  );\n}\n\nDescription.defaultProps = {\n  avatar:\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\n};\n\nDescription.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Stats.module.css';\n\nexport default function Stats({ followers, views, likes }) {\n  return (\n    <ul className={style.stats}>\n      <li>\n        <span className={style.label}>Followers</span>\n        <span className={style.quantity}>{followers}</span>\n      </li>\n      <li>\n        <span className={style.label}>Views</span>\n        <span className={style.quantity}>{views}</span>\n      </li>\n      <li>\n        <span className={style.label}>Likes</span>\n        <span className={style.quantity}>{likes}</span>\n      </li>\n    </ul>\n  );\n}\n\nStats.defaultProps = {\n  followers: 0,\n  views: 0,\n  likes: 0,\n};\n\nStats.propTypes = {\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n};\n","import React from 'react';\nimport Profile from '../Profile/Profile/Profile';\nimport Description from '../Profile/Description/Description';\nimport Stats from '../Profile/Stats/Stats';\nimport user from '../Profile/user.json';\n\nconst {\n  avatar,\n  name,\n  tag,\n  location,\n  stats: { followers, views, likes },\n} = user;\n\nexport default function App() {\n  return (\n    <>\n      <Profile>\n        <Description\n          avatar={avatar}\n          name={name}\n          tag={tag}\n          location={location}\n        />\n        <Stats followers={followers} views={views} likes={likes} />\n      </Profile>\n    </>\n  );\n}\n","export default function createRandomColor() {\n  const hexParts = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i += 1) {\n    color += hexParts[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n","import React from 'react';\nimport style from './StatisticFormat.module.css';\nimport createRandomColor from './createRandomColor';\n\nexport default function StatisticFormat({ stats }) {\n  return (\n    <ul className={style.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li\n          key={id}\n          className={style.item}\n          style={{ backgroundColor: createRandomColor() }}\n        >\n          <span className={style.label}>{label}</span>\n          <span className={style.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './StatisticsSection.module.css';\nimport StatisticFormat from '../StatisticFormat/StatisticFormat';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={style.statistics}>\n      {title && <h2 className={style.title}>{title}</h2>}\n      <StatisticFormat stats={stats} />\n    </section>\n  );\n}\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './FriendList.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ avatar, name, isOnline }) => (\n        <li className={s.item}>\n          <span className={isOnline ? s.statusOnline : s.statusOffline}></span>\n          <img className={s.avatar} src={avatar} alt={name} width=\"90\" />\n          <p className={s.name}>{name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.defaultProps = {\n  avatar:\n    'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf({\n    isOnline: PropTypes.bool.isRequired,\n    avatar: PropTypes.string,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport Statistics from './components/Statistics/StatisticsSection/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport friends from './components/FriendList/friends.json';\nimport transactions from './components/TransactionHistory/transactions.json';\nimport './base.css';\n\nReactDOM.render(\n  <div>\n    <App />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </div>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}